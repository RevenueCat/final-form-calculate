!(function(t, n) {
  'object' == typeof exports && 'undefined' != typeof module
    ? n(exports)
    : 'function' == typeof define && define.amd
    ? define(['exports'], n)
    : n((t['final-form-calculate'] = {}))
})(this, function(t) {
  'use strict'
  var s = function(t, n) {
      for (
        var e = (function(t) {
            if (null == t || !t.length) return []
            if ('string' != typeof t)
              throw new Error('toPath() expects a string')
            return t.split(/[.[\]]+/).filter(Boolean)
          })(n),
          o = t,
          r = 0;
        r < e.length;
        r++
      ) {
        var f = e[r]
        if (null == o || 'object' != typeof o || (Array.isArray(o) && isNaN(f)))
          return
        o = o[f]
      }
      return o
    },
    n =
      'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
        ? function(t) {
            return typeof t
          }
        : function(t) {
            return t &&
              'function' == typeof Symbol &&
              t.constructor === Symbol &&
              t !== Symbol.prototype
              ? 'symbol'
              : typeof t
          },
    l = function(t) {
      return (
        !!t &&
        ('object' === (void 0 === t ? 'undefined' : n(t)) ||
          'function' == typeof t) &&
        'function' == typeof t.then
      )
    },
    y = function(t, n) {
      return t === n
    }
  ;(t.default = function() {
    for (var t = arguments.length, n = Array(t), e = 0; e < t; e++)
      n[e] = arguments[e]
    return function(c) {
      var a = {}
      return c.subscribe(
        function(t) {
          var u = t.values
          c.batch(function() {
            var f = function(t, n, e) {
                var o = u && s(u, t),
                  r = a && s(a, t)
                if (!n(o, r))
                  if ('function' == typeof e) {
                    var f = e(o, t, u, a)
                    l(f)
                      ? f.then(function(n) {
                          Object.keys(n).forEach(function(t) {
                            c.change(t, n[t])
                          })
                        })
                      : Object.keys(f).forEach(function(t) {
                          c.change(t, f[t])
                        })
                  } else
                    Object.keys(e).forEach(function(n) {
                      var t = (0, e[n])(o, u, a)
                      l(t)
                        ? t.then(function(t) {
                            c.change(n, t)
                          })
                        : c.change(n, t)
                    })
              },
              i = c.getRegisteredFields()
            n.forEach(function(t) {
              var n = t.field,
                e = t.isEqual,
                o = t.updates
              if ('string' == typeof n) f(n, e || y, o)
              else {
                var r = Array.isArray(n)
                  ? function(t) {
                      return ~n.indexOf(t)
                    }
                  : function(t) {
                      return n.test(t)
                    }
                i.forEach(function(t) {
                  r(t) && f(t, e || y, o)
                })
              }
            }),
              (a = u)
          })
        },
        { values: !0 }
      )
    }
  }),
    Object.defineProperty(t, '__esModule', { value: !0 })
})
//# sourceMappingURL=final-form-calculate.umd.min.js.map
